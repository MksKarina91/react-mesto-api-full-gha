{"ast":null,"code":"export const BASE_URL = \"https://api.mkskarina.nomoredomainsmonster.ru\";\nconst headers = {\n  \"Content-Type\": \"application/json\"\n};\nfunction checkError(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Ошибка: ${res.status}`);\n}\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(checkError);\n};\nexport const autorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(checkError);\n};\nexport const getContent = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: {\n      ...headers,\n      Authorization: `Bearer ${token}`\n    }\n  }).then(checkError);\n};","map":{"version":3,"names":["BASE_URL","headers","checkError","res","ok","json","Promise","reject","status","register","email","password","fetch","method","body","JSON","stringify","then","autorize","getContent","token","Authorization"],"sources":["/Users/MksKarina91/Documents/GitHub/react-mesto-api-full-gha/frontend/src/utils/Auth.js"],"sourcesContent":["export const BASE_URL = \"https://api.mkskarina.nomoredomainsmonster.ru\";\n\nconst headers = {\n  \"Content-Type\": \"application/json\",\n};\n\nfunction checkError(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Ошибка: ${res.status}`);\n}\n\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify({ email, password }),\n  }).then(checkError);\n};\n\nexport const autorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify({ email, password }),\n  }).then(checkError);\n};\n\nexport const getContent = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    headers: { ...headers, Authorization: `Bearer ${token}` },\n  }).then(checkError);\n};\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+CAA+C;AAEvE,MAAMC,OAAO,GAAG;EACd,cAAc,EAAE;AAClB,CAAC;AAED,SAASC,UAAUA,CAACC,GAAG,EAAE;EACvB,IAAIA,GAAG,CAACC,EAAE,EAAE;IACV,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;EACnB;EACA,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUJ,GAAG,CAACK,MAAO,EAAC,CAAC;AAChD;AAEA,OAAO,MAAMC,QAAQ,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;EAC3C,OAAOC,KAAK,CAAE,GAAEZ,QAAS,SAAQ,EAAE;IACjCa,MAAM,EAAE,MAAM;IACdZ,OAAO;IACPa,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEN,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC,CAACM,IAAI,CAACf,UAAU,CAAC;AACrB,CAAC;AAED,OAAO,MAAMgB,QAAQ,GAAGA,CAACR,KAAK,EAAEC,QAAQ,KAAK;EAC3C,OAAOC,KAAK,CAAE,GAAEZ,QAAS,SAAQ,EAAE;IACjCa,MAAM,EAAE,MAAM;IACdZ,OAAO;IACPa,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEN,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC,CAACM,IAAI,CAACf,UAAU,CAAC;AACrB,CAAC;AAED,OAAO,MAAMiB,UAAU,GAAIC,KAAK,IAAK;EACnC,OAAOR,KAAK,CAAE,GAAEZ,QAAS,WAAU,EAAE;IACnCa,MAAM,EAAE,KAAK;IACbZ,OAAO,EAAE;MAAE,GAAGA,OAAO;MAAEoB,aAAa,EAAG,UAASD,KAAM;IAAE;EAC1D,CAAC,CAAC,CAACH,IAAI,CAACf,UAAU,CAAC;AACrB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}