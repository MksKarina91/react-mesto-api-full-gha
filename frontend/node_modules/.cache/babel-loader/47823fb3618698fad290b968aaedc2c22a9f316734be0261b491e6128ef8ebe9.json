{"ast":null,"code":"var _jsxFileName = \"/Users/MksKarina91/Documents/GitHub/react-mesto-api-full-gha/frontend/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as auth from \"../utils/Auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  handleLogin,\n  setInfoTooltipPopupOpen,\n  setTooltipSuccess,\n  setUserEmail\n}) => {\n  _s();\n  const [formValue, setFormValue] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const handleChange = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValue(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  }, []);\n  const handleSubmit = useCallback(e => {\n    e.preventDefault();\n    const {\n      email,\n      password\n    } = formValue;\n    if (!email || !password) {\n      setErrorMessage(\"Необходимо заполнить все поля\");\n      setTooltipSuccess(false);\n      setInfoTooltipPopupOpen(true);\n      return;\n    }\n    auth.autorize(email, password).then(res => {\n      if (res && res.token) {\n        handleLogin(res);\n        setUserEmail(email);\n        navigate(\"/\");\n      }\n    }).catch(err => {\n      if (err.statusCode === 400) {\n        setErrorMessage(\"Не передано одно из полей\");\n      } else if (err.statusCode === 401) {\n        setErrorMessage(\"Пользователь с email не найден\");\n      }\n      setTooltipSuccess(false);\n      setInfoTooltipPopupOpen(true);\n    });\n  }, [formValue, navigate, handleLogin, setUserEmail, setTooltipSuccess, setInfoTooltipPopupOpen]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"login__title\",\n        children: \"\\u0412\\u0445\\u043E\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"login__error\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login__form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          value: formValue.email,\n          className: \"login__input\",\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          value: formValue.password,\n          className: \"login__input\",\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"login__button\",\n          children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Login, \"CHbqvYD71PSYYxous4iJPqy3j1o=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useCallback","useNavigate","auth","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","handleLogin","setInfoTooltipPopupOpen","setTooltipSuccess","setUserEmail","_s","formValue","setFormValue","email","password","errorMessage","setErrorMessage","navigate","handleChange","e","name","value","target","prevState","handleSubmit","preventDefault","autorize","then","res","token","catch","err","statusCode","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","type","placeholder","required","_c","$RefreshReg$"],"sources":["/Users/MksKarina91/Documents/GitHub/react-mesto-api-full-gha/frontend/src/components/Login.js"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as auth from \"../utils/Auth\";\n\nconst Login = ({\n  handleLogin,\n  setInfoTooltipPopupOpen,\n  setTooltipSuccess,\n  setUserEmail,\n}) => {\n  const [formValue, setFormValue] = useState({ email: \"\", password: \"\" });\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleChange = useCallback((e) => {\n    const { name, value } = e.target;\n    setFormValue((prevState) => ({ ...prevState, [name]: value }));\n  }, []);\n\n  const handleSubmit = useCallback(\n    (e) => {\n      e.preventDefault();\n      const { email, password } = formValue;\n\n      if (!email || !password) {\n        setErrorMessage(\"Необходимо заполнить все поля\");\n        setTooltipSuccess(false);\n        setInfoTooltipPopupOpen(true);\n        return;\n      }\n\n      auth\n        .autorize(email, password)\n        .then((res) => {\n          if (res && res.token) {\n            handleLogin(res);\n            setUserEmail(email);\n            navigate(\"/\");\n          }\n        })\n        .catch((err) => {\n          if (err.statusCode === 400) {\n            setErrorMessage(\"Не передано одно из полей\");\n          } else if (err.statusCode === 401) {\n            setErrorMessage(\"Пользователь с email не найден\");\n          }\n          setTooltipSuccess(false);\n          setInfoTooltipPopupOpen(true);\n        });\n    },\n    [\n      formValue,\n      navigate,\n      handleLogin,\n      setUserEmail,\n      setTooltipSuccess,\n      setInfoTooltipPopupOpen,\n    ]\n  );\n\n  return (\n    <>\n      <div className=\"login\">\n        <p className=\"login__title\">Вход</p>\n        {errorMessage && <p className=\"login__error\">{errorMessage}</p>}\n        <form className=\"login__form\" onSubmit={handleSubmit}>\n          <input\n            onChange={handleChange}\n            value={formValue.email}\n            className=\"login__input\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            required\n          />\n          <input\n            onChange={handleChange}\n            value={formValue.password}\n            className=\"login__input\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Пароль\"\n            required\n          />\n          <button className=\"login__button\">Войти</button>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}