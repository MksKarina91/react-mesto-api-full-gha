{"ast":null,"code":"var _jsxFileName = \"/Users/MksKarina91/Documents/GitHub/react-mesto-api-full-gha/frontend/src/components/InfoTooltip.js\";\nimport icon_ok from \"../images/success.svg\";\nimport icon_cancel from \"../images/error.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InfoTooltip(props) {\n  const {\n    isOpen,\n    onClose,\n    isTooltipSuccess,\n    message\n  } = props;\n  const icon = isTooltipSuccess ? icon_ok : icon_cancel;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `popup ${isOpen ? \"popup_opened\" : \"\"} `,\n    onClick: e => {\n      if (e.target.classList.contains(\"popup_opened\")) {\n        onClose();\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__container popup__succes\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"popup__close-btn\",\n        onClick: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: icon,\n        alt: \"\\u0423\\u0441\\u043F\\u0435\\u0445\",\n        className: \"popup__img-succes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"popup__succes-text\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = InfoTooltip;\nexport default InfoTooltip;\nvar _c;\n$RefreshReg$(_c, \"InfoTooltip\");","map":{"version":3,"names":["icon_ok","icon_cancel","jsxDEV","_jsxDEV","InfoTooltip","props","isOpen","onClose","isTooltipSuccess","message","icon","className","onClick","e","target","classList","contains","children","type","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["/Users/MksKarina91/Documents/GitHub/react-mesto-api-full-gha/frontend/src/components/InfoTooltip.js"],"sourcesContent":["import icon_ok from \"../images/success.svg\";\nimport icon_cancel from \"../images/error.svg\";\n\nfunction InfoTooltip(props) {\n  const { isOpen, onClose, isTooltipSuccess, message } = props;\n  const icon = isTooltipSuccess ? icon_ok : icon_cancel;\n\n  return (\n    <div\n      className={`popup ${isOpen ? \"popup_opened\" : \"\"} `}\n      onClick={(e) => {\n        if (e.target.classList.contains(\"popup_opened\")) {\n          onClose();\n        }\n      }}\n    >\n      <div className=\"popup__container popup__succes\">\n        <button\n          type=\"button\"\n          className=\"popup__close-btn\"\n          onClick={onClose}\n        ></button>\n        <img src={icon} alt=\"Успех\" className=\"popup__img-succes\" />\n        <p className=\"popup__succes-text\">{message}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default InfoTooltip;\n"],"mappings":";AAAA,OAAOA,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,WAAW,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,WAAWA,CAACC,KAAK,EAAE;EAC1B,MAAM;IAAEC,MAAM;IAAEC,OAAO;IAAEC,gBAAgB;IAAEC;EAAQ,CAAC,GAAGJ,KAAK;EAC5D,MAAMK,IAAI,GAAGF,gBAAgB,GAAGR,OAAO,GAAGC,WAAW;EAErD,oBACEE,OAAA;IACEQ,SAAS,EAAG,SAAQL,MAAM,GAAG,cAAc,GAAG,EAAG,GAAG;IACpDM,OAAO,EAAGC,CAAC,IAAK;MACd,IAAIA,CAAC,CAACC,MAAM,CAACC,SAAS,CAACC,QAAQ,CAAC,cAAc,CAAC,EAAE;QAC/CT,OAAO,CAAC,CAAC;MACX;IACF,CAAE;IAAAU,QAAA,eAEFd,OAAA;MAAKQ,SAAS,EAAC,gCAAgC;MAAAM,QAAA,gBAC7Cd,OAAA;QACEe,IAAI,EAAC,QAAQ;QACbP,SAAS,EAAC,kBAAkB;QAC5BC,OAAO,EAAEL;MAAQ;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,eACVnB,OAAA;QAAKoB,GAAG,EAAEb,IAAK;QAACc,GAAG,EAAC,gCAAO;QAACb,SAAS,EAAC;MAAmB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5DnB,OAAA;QAAGQ,SAAS,EAAC,oBAAoB;QAAAM,QAAA,EAAER;MAAO;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACG,EAAA,GAxBQrB,WAAW;AA0BpB,eAAeA,WAAW;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}